{"version":3,"sources":["components/Header.js","components/TodosFilter.js","components/Footer.js","components/Todo.js","components/Shapes.js","components/TodoList.js","components/Main.js","App.js","index.js"],"names":["Header","state","inputValue","onChange","event","setState","target","value","replace","onEnterDown","addTodo","props","key","title","id","uuid","completed","prevState","className","onKeyDown","this","placeholder","React","Component","TodosFilter","activeFilter","setActiveFilter","onFocus","onClick","handleStatusChange","href","Footer","todoList","todoListCopy","getTodos","length","count","filter","todo","showActiveTodos","preventDefault","todos","todosCopy","type","Todo","PropTypes","shape","string","bool","useState","isSelected","setSelected","changeTodo","checked","todoId","map","item","currentItem","onDoubleClick","searchId","parentElement","firstElementChild","currentTodo","ref","input","focus","e","handleKeyDown","onBlur","handleBlur","TodoList","Main","toogleAllTodosStatus","htmlFor","App","viewStatus","status","localStorage","setItem","JSON","stringify","prevstate","some","items","todolist","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5beb0d8.chunk.js","sourcesContent":["import React from 'react';\nimport uuid from 'react-uuid';\nimport PropTypes from 'prop-types';\n\nexport class Header extends React.Component {\n  state = {\n    inputValue: '',\n  }\n\n    onChange = event => (\n      this.setState({\n        inputValue: event.target.value.replace(/[^\\wА-Яа-я\\s]|^\\s+$/g, ''),\n      })\n    )\n\n    onEnterDown = (event) => {\n      const { addTodo } = this.props;\n\n      if (event.key === 'Enter') {\n        const todo = ({\n          title: this.state.inputValue,\n          id: uuid(),\n          completed: false,\n        });\n\n        addTodo(todo);\n        this.setState(prevState => ({\n          inputValue: '',\n        }));\n      }\n    }\n\n    render() {\n      return (\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            onKeyDown={this.onEnterDown}\n            onChange={this.onChange}\n            value={this.state.inputValue}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </header>\n      );\n    }\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodosFilter extends React.Component {\n  state = {\n    activeFilter: 'All',\n  }\n\n  setActiveFilter = (event) => {\n    this.setState({\n      activeFilter: event.target.id,\n    });\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            id=\"All\"\n            onFocus={this.setActiveFilter}\n            onClick={this.props.handleStatusChange}\n            href=\"#/\"\n            className={this.state.activeFilter === 'All' ? 'selected' : ''}\n          >\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            id=\"Active\"\n            onClick={this.props.handleStatusChange}\n            onFocus={this.setActiveFilter}\n            href=\"#/active\"\n            className={this.state.activeFilter === 'Active' ? 'selected' : ''}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            id=\"Completed\"\n            onFocus={this.setActiveFilter}\n            onClick={this.props.handleStatusChange}\n            className={this.state.activeFilter === 'Completed'\n              ? 'selected' : ''}\n            href=\"#/completed\"\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nTodosFilter.propTypes = {\n  handleStatusChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosFilter } from './TodosFilter';\n\nexport const Footer = ({ todoList,\n  todoListCopy, getTodos, handleStatusChange }) => {\n  const showActiveTodos = () => {\n    const count = todoList.filter(todo => todo.completed === false).length;\n\n    if (count === 0) {\n      return '';\n    }\n\n    return (count > 1) ? `${count} items left` : `${count} item left`;\n  };\n\n  const clearCompletedTodos = (event) => {\n    event.preventDefault();\n    const todos = todoList.filter(todo => todo.completed === false);\n    const todosCopy = todoListCopy.filter(todo => todo.completed === false);\n\n    getTodos(todos, todosCopy);\n  };\n\n  return (\n    <footer className={todoList.length ? 'footer' : 'footer--hidden'}>\n      <span className=\"todo-count\">\n        {showActiveTodos()}\n      </span>\n\n      <TodosFilter\n        todoList={todoList}\n        todoListCopy={todoListCopy}\n        getTodos={getTodos}\n        handleStatusChange={handleStatusChange}\n      />\n\n      <button\n        onClick={clearCompletedTodos}\n        type=\"button\"\n        className=\"clear-completed\"\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  handleStatusChange: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  todoListCopy: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getTodos: PropTypes.func.isRequired,\n};\n\n// Footer.defaultProps = {\n//   todoList: [],\n//   todoListCopy: [],\n// };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShape } from './Shapes';\n\nexport const Todo = (props) => {\n  const [isSelected, setSelected] = useState(false);\n  const { todoList, todo, changeTodo } = props;\n\n  const deleteItem = (event) => {\n    const searchId = event.target.parentElement.firstElementChild.id;\n    const todos = todoList\n      .filter(currentTodo => currentTodo.id !== searchId);\n    const todosCopy = props.todoList\n      .filter(currentTodo => currentTodo.id !== searchId);\n\n    props.getTodos(todos, todosCopy);\n  };\n\n  const changeStatus = (event) => {\n    const todoId = event.target.id;\n\n    const todos = props.todoList.map((item) => {\n      const currentItem = item;\n\n      if (currentItem.id === todoId) {\n        currentItem.completed = !item.completed;\n      }\n\n      return currentItem;\n    });\n\n    props.getTodos(todos, todos);\n  };\n\n  const handleKeyDown = (e) => {\n    const { value } = e.target;\n\n    if (e.key === 'Enter') {\n      if (value === '') {\n        const searchId = e.target.id;\n        const todos = todoList\n          .filter(currentTodo => currentTodo.id !== searchId);\n        const todosCopy = props.todoList\n          .filter(currentTodo => currentTodo.id !== searchId);\n\n        props.getTodos(todos, todosCopy);\n      }\n\n      setSelected(false);\n    }\n  };\n\n  const handleBlur = (e) => {\n    const { value } = e.target;\n\n    if (value === '') {\n      const searchId = e.target.id;\n      const todos = todoList\n        .filter(currentTodo => currentTodo.id !== searchId);\n      const todosCopy = props.todoListCopy\n        .filter(currentTodo => currentTodo.id !== searchId);\n\n      props.getTodos(todos, todosCopy);\n    }\n\n    setSelected(false);\n  };\n\n  return (\n    <li\n      className={todo.completed ? 'completed' : ''}\n      key={todo.id}\n    >\n      <div className=\"view \">\n        <input\n          checked={todo.completed}\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onChange={changeStatus}\n        />\n        <label\n          onDoubleClick={() => setSelected(true)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteItem}\n        />\n      </div>\n      <input\n        ref={input => input && input.focus()}\n        type=\"text\"\n        id={todo.id}\n        className={isSelected ? 'editing' : 'edit'}\n        onKeyDown={e => handleKeyDown(e)}\n        onBlur={e => handleBlur(e)}\n        onChange={e => changeTodo(e, todo.id)}\n        value={todo.title}\n      />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: todoShape.isRequired,\n  changeTodo: PropTypes.func.isRequired,\n  getTodos: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  todoListCopy: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todoShape = PropTypes.shape({\n  id: PropTypes.string,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from './Todo';\n\nexport const TodoList = props => (\n  <ul className=\"todo-list\">\n    {props.todoListCopy.map(todo => (\n      <Todo {...props} todo={todo} key={todo.id} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todoListCopy: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoList } from './TodoList';\n\nexport const Main = props => (\n  <section className=\"main\">\n    <input\n      onChange={props.toogleAllTodosStatus}\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <TodoList\n      {...props}\n    />\n  </section>\n);\n\nMain.propTypes = {\n  toogleAllTodosStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { Main } from './components/Main';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    todoListCopy: [],\n    viewStatus: 'All',\n  }\n\n  componentDidMount() {\n    const todos = JSON.parse(localStorage.getItem('todoList'));\n\n    if (todos) {\n      this.setState({\n        todoList: todos,\n        todoListCopy: todos,\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.todoList !== prevState.todoList) {\n      localStorage\n        .setItem('todoList', JSON.stringify(this.state.todoList));\n    }\n  }\n\n  status = (todo) => {\n    switch (this.state.viewStatus) {\n      case 'All':\n        return true;\n\n      case 'Active':\n        return !todo.completed;\n\n      case 'Completed':\n        return todo.completed;\n\n      default:\n        return true;\n    }\n  }\n\n  handleStatusChange = (event) => {\n    const status = event.target.id;\n\n    this.setState({ viewStatus: status });\n  }\n\n  addTodo = (todo) => {\n    if (!todo.title.length) {\n      return;\n    }\n\n    localStorage\n      .setItem('todoList', JSON.stringify([...this.state.todoList, todo]));\n\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList, todo],\n      todoListCopy: [...prevState.todoListCopy, todo],\n    }));\n  }\n\n  changeTodo = (e, id) => {\n    const { value } = e.target;\n\n    const todos = this.state.todoList.map((item) => {\n      if (item.id === id) {\n        return (\n          {\n            ...item,\n            title: value,\n          }\n        );\n      }\n\n      return item;\n    });\n\n    this.getTodos(todos, todos);\n  }\n\n  toogleAllTodosStatus = () => {\n    this.setState((prevstate) => {\n      if (prevstate.todoList.some(todo => todo.completed === false)) {\n        const items = prevstate.todoList.map((item) => {\n          const currentItem = item;\n\n          currentItem.completed = true;\n\n          return currentItem;\n        });\n\n        return {\n          todolist: items, todoListCopy: items,\n        };\n      }\n\n      const items = prevstate.todoList.map((item) => {\n        const currentItem = item;\n\n        currentItem.completed = false;\n\n        return currentItem;\n      });\n\n      return {\n        todolist: items, todoListCopy: items,\n      };\n    });\n  }\n\n  getTodos = (todos, todosCopy) => (\n    this.setState({\n      todoListCopy: todosCopy,\n      todoList: todos,\n    })\n  )\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <Main\n          todoList={this.state.todoList}\n          todoListCopy={this.state.todoListCopy.filter(this.status)}\n          toogleAllTodosStatus={this.toogleAllTodosStatus}\n          getTodos={this.getTodos}\n          changeTodo={this.changeTodo}\n        />\n        <Footer\n          todoList={this.state.todoList}\n          todoListCopy={this.state.todoListCopy}\n          getTodos={this.getTodos}\n          handleStatusChange={this.handleStatusChange}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}