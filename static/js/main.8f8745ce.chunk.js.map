{"version":3,"sources":["components/Header.js","components/TodosFilter.js","components/Shapes.js","components/Footer.js","components/Todo.js","components/TodoList.js","components/Main.js","App.js","index.js"],"names":["Header","state","inputValue","id","onChange","event","setState","target","value","replace","onEnterDown","addTodo","props","key","title","completed","prevState","className","onKeyDown","this","placeholder","React","Component","TodosFilter","PropTypes","shape","number","string","bool","activeFilter","setActiveFilter","resetFilter","preventDefault","getTodos","todoList","filterTodos","todosCopy","filter","todo","showComletedTodos","onFocus","onClick","href","Footer","todoListCopy","length","count","showActiveTodos","todos","type","Todo","checked","todoId","map","item","currentItem","htmlFor","searchId","parentElement","firstElementChild","currentTodo","Number","TodoList","Main","toogleAllTodosStatus","App","prevstate","some","items","todolist","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f8745ce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Header extends React.Component {\n  state = {\n    inputValue: '',\n    id: 0,\n  }\n\n    onChange = event => (\n      this.setState({\n        inputValue: event.target.value.replace(/[^\\w\\s]|^\\s+$/g, ''),\n      })\n    )\n\n    onEnterDown = (event) => {\n      const { addTodo } = this.props;\n\n      if (event.key === 'Enter') {\n        const todo = ({\n          title: this.state.inputValue,\n          id: this.state.id,\n          completed: false,\n        });\n\n        addTodo(todo);\n        this.setState(prevState => ({\n          inputValue: '',\n          id: prevState.id + 1,\n        }));\n      }\n    }\n\n    render() {\n      return (\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            onKeyDown={this.onEnterDown}\n            onChange={this.onChange}\n            value={this.state.inputValue}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </header>\n      );\n    }\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShape } from './Shapes';\n\nexport class TodosFilter extends React.Component {\n  state = {\n    activeFilter: 'All',\n  }\n\n  setActiveFilter = (event) => {\n    this.setState({\n      activeFilter: event.target.id,\n    });\n  }\n\n  resetFilter = (event) => {\n    event.preventDefault();\n    this.props.getTodos(this.props.todoList, this.props.todoList);\n  }\n\n  filterTodos = (event) => {\n    event.preventDefault();\n    const todosCopy = this.props.todoList\n      .filter(todo => todo.completed === false);\n\n    this.props.getTodos(this.props.todoList, todosCopy);\n  }\n\n  showComletedTodos = (event) => {\n    event.preventDefault();\n\n    const todosCopy = this.props.todoList\n      .filter(todo => todo.completed === true);\n\n    this.props.getTodos(this.props.todoList, todosCopy);\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            id=\"All\"\n            onFocus={this.setActiveFilter}\n            onClick={this.resetFilter}\n            href=\"#/\"\n            className={this.state.activeFilter === 'All' ? 'selected' : ''}\n          >\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            id=\"Active\"\n            onClick={this.filterTodos}\n            onFocus={this.setActiveFilter}\n            href=\"#/active\"\n            className={this.state.activeFilter === 'Active' ? 'selected' : ''}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            id=\"Completed\"\n            onFocus={this.setActiveFilter}\n            onClick={this.showComletedTodos}\n            className={this.state.activeFilter === 'Completed'\n              ? 'selected' : ''}\n            href=\"#/completed\"\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nTodosFilter.propTypes = {\n  getTodos: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todoShape = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShape } from './Shapes';\nimport { TodosFilter } from './TodosFilter';\n\nexport const Footer = ({ todoList, todoListCopy, getTodos }) => {\n  const showActiveTodos = () => {\n    const count = todoList.filter(todo => todo.completed === false).length;\n\n    if (count === 0) {\n      return '';\n    }\n\n    return (count > 1) ? `${count} items left` : `${count} item left`;\n  };\n\n  const clearCompletedTodos = (event) => {\n    event.preventDefault();\n    const todos = todoList.filter(todo => todo.completed === false);\n    const todosCopy = todoListCopy.filter(todo => todo.completed === false);\n\n    getTodos(todos, todosCopy);\n  };\n\n  return (\n    <footer className={todoList.length ? 'footer' : 'footer--hidden'}>\n      <span className=\"todo-count\">\n        {showActiveTodos()}\n      </span>\n\n      <TodosFilter\n        todoList={todoList}\n        todoListCopy={todoListCopy}\n        getTodos={getTodos}\n      />\n\n      <button\n        onClick={clearCompletedTodos}\n        type=\"button\"\n        className=\"clear-completed\"\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n  todoListCopy: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n  getTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShape } from './Shapes';\n\nexport const Todo = (props) => {\n  const { todoList, todo, todoListCopy } = props;\n  const deleteItem = (event) => {\n    const searchId = event.target.parentElement.firstElementChild.id;\n    const todos = todoList\n      .filter(currentTodo => currentTodo.id !== Number(searchId));\n    const todosCopy = props.todoListCopy\n      .filter(currentTodo => currentTodo.id !== Number(searchId));\n\n    props.getTodos(todos, todosCopy);\n  };\n\n  const changeStatus = (event) => {\n    const todoId = event.target.id;\n\n    const todos = props.todoList.map((item) => {\n      const currentItem = item;\n\n      if (currentItem.id === +todoId) {\n        currentItem.completed = !item.completed;\n      }\n\n      return currentItem;\n    });\n\n    props.getTodos(todos, todoListCopy);\n  };\n\n  return (\n    <li\n      className={todo.completed ? 'completed' : ''}\n      key={todo.id}\n    >\n      <div className=\"view\">\n        <input\n          checked={todo.completed}\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onChange={changeStatus}\n        />\n        <label htmlFor={todo.id}>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteItem}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: todoShape.isRequired,\n  getTodos: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n  todoListCopy: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from './Todo';\nimport { todoShape } from './Shapes';\n\nexport const TodoList = props => (\n  <ul className=\"todo-list\">\n    {props.todoListCopy.map(todo => (\n      <Todo {...props} todo={todo} key={todo.id} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todoListCopy: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoList } from './TodoList';\n\nexport const Main = props => (\n  <section className=\"main\">\n    <input\n      onChange={props.toogleAllTodosStatus}\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <TodoList\n      {...props}\n    />\n  </section>\n);\n\nMain.propTypes = {\n  toogleAllTodosStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { Main } from './components/Main';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    todoListCopy: [],\n  }\n\n  addTodo = (todo) => {\n    if (!todo.title.length) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList, todo],\n      todoListCopy: [...prevState.todoListCopy, todo],\n    }));\n  }\n\n  toogleAllTodosStatus = () => {\n    this.setState((prevstate) => {\n      if (prevstate.todoList.some(todo => todo.completed === false)) {\n        const items = prevstate.todoList.map((item) => {\n          const currentItem = item;\n\n          currentItem.completed = true;\n\n          return currentItem;\n        });\n\n        return {\n          todolist: items, todoListCopy: items,\n        };\n      }\n\n      const items = prevstate.todoList.map((item) => {\n        const currentItem = item;\n\n        currentItem.completed = false;\n\n        return currentItem;\n      });\n\n      return {\n        todolist: items, todoListCopy: items,\n      };\n    });\n  }\n\n  getTodos = (todos, todosCopy) => (\n    this.setState({\n      todoListCopy: todosCopy,\n      todoList: todos,\n    })\n  )\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <Main\n          todoList={this.state.todoList}\n          todoListCopy={this.state.todoListCopy}\n          toogleAllTodosStatus={this.toogleAllTodosStatus}\n          getTodos={this.getTodos}\n        />\n        <Footer\n          todoList={this.state.todoList}\n          todoListCopy={this.state.todoListCopy}\n          getTodos={this.getTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}